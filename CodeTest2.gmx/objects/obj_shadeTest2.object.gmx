<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_shade</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//LOS
global.touchedPlayer = 0;
global.seePlayer = 0;
//Variables
    //States
hp = 8;
global.idleState= 1;
idleTime = 60;
idleMove = 0;
chaseReact = 30;
global.chaseState = 0
attackState = 0;
attack = 0;

    //Sight
los = 1;
lineOfSight = 1;
seePlayer = 0;
moveToPlayer = 0;
//Echolocation Alarm
alarm[0] = 0;
//Chase Alarm
alarm[1] = 0;

    //Direction
right = 1;
left = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//

//Chase Movement
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
//if problematic change newEcho back to los
if (right == 1 &amp;&amp; left == 0) {
    newEcho = instance_create(x,y-20, obj_LOS);
    newEcho.speed = 30;
    newEcho.direction = 0;
}

if (right == 0 &amp;&amp; left == 1) {
    newEcho = instance_create(x, y-20, obj_LOS);
    newEcho.speed = 30;
    newEcho.direction = 180;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
//Gravity
if (place_free(x, y+1)) {
gravity = .75;
//Set max falll speed
if (vspeed &gt;= 10) {
vspeed = 10;

}
}else{
gravity = 0;
}

//Die Code
if (hp &lt;= 0) {
hp = 0;
instance_destroy();
}

////////////////////////////////////////////////////////////////////////////////

//Determining Direction
if (image_xscale == 1) {
right = 1; left = 0;
}
if (image_xscale == -1) {
right = 0; left = 1;
}

//Echolocation
if (instance_exists(obj_player)) {
    if (alarm[0] = -1) {
    alarm[0] = random_range(60, 90);
    }
}

/////////////////////////////////////////////////////////////////////////////

//Idle
if (attack == 0 &amp;&amp; seePlayer == 0 &amp;&amp; global.idleState == 1) {
    idleTime -=1;

if (idleTime == 0 &amp;&amp; global.idleState == 1) {
    idleMove = choose(0,1,2);
    idleTime = choose(60, 90, 120); 
}

if (idleMove == 0 &amp;&amp; global.idleState == 1) {
    if (image_xscale == 1) {
        sprite_index = spr_shade;
        image_speed = 1;
        image_xscale = 1;
    }else{
        sprite_index = spr_shade;
        image_speed = 1;
        image_xscale = -1;
    }
}

if (idleMove == 1 &amp;&amp; global.idleState == 1) {
    sprite_index = spr_shadeRun;
        if (place_free(x+2, y)) {
        image_xscale = 1;
        image_speed = 1;
        x += .5;
        } 
    }
if (idleMove == 2 &amp;&amp; global.idleState == 1) {
    sprite_index = spr_shadeRun;
        if (place_free(x-2, y)) {
        image_xscale = -1;
        image_speed = 1;
        x -= .5;   
        } 
    }
    
if (idleMove == 1 &amp;&amp; global.idleState == 1 &amp;&amp; !place_free(x+2, y)) {
    idleMove = 2;
    }
if (idleMove == 2 &amp;&amp; global.idleState == 1 &amp;&amp; !place_free(x-2, y)) {
    idleMove = 1;
    }
if (!place_free(x+2, y) &amp;&amp; !place_free(x-2, y &amp;&amp; global.idleState == 1)) {
    idleMove = 0;
    }
        }
    
///////////////////////////////////////////////////////////////////////////////////
 
 /*
    //Un-Comment when animation for noticing player
//LOS React (before Chase)
    if (seePlayer == 1 &amp;&amp; chaseReact &lt;&lt; 0) {
        chaseReact -=1;
            if (x &lt;&lt; obj_player.x &amp;&amp; image_xscale == 1) { //Player is right of shade and shade is facing right
                sprite_index = spr_shadeReact; 
                image_xscale = 1;
                image_speed = .5;
                } 
            if (x &gt;&gt; obj_player.x &amp;&amp; image_xscale == 1) { //Player is left of shade and shade is facing right
                sprite_index = spr_shadeReactTurn;
                image_xscale = 1;
                image_speed = .5;
                }
            if (x &lt;&lt; obj_player.x &amp;&amp; image_xscale == -1) { //Player is right of shade and shade is facing left
                sprite_index = spr_shadeReactTurn;
                image_xscale = -1;
                image_speed = .5;
                }
            if (x &gt;&gt; obj_player.x &amp;&amp; image_xscale == -1) { //Player is left of shade and shade is facing left
                sprite_index = spr_shadeReact;
                image_xscale = -1;
                image_speed = .5;
                } 
    }
     */  
       /////////////Revise Below After ^^^^^^^ /////////////////////   
       /*
//Chase
    //seePlayer is activated by obj_LOS
    if (global.seePlayer == 1 &amp;&amp; chaseState == 1) {
        //Remove when above is done
        chaseReact -=1;
    
    if (chaseReact == 0) {
    //Chase Movement

if (attack == 0 &amp;&amp; distance_to_object(obj_player) &lt;= 20 &amp;&amp; !place_free(x,y+1))  {
    image_speed = 1;
    action_potential_step(obj_player.x, y, 2, 0);


    if (obj_player.x &gt;&gt; x) { // PLAYER ON RIGHT
        sprite_index = spr_shadeRun;
        image_xscale = 1;
        x+=2;
    }
    if (obj_player.x &lt;&lt; x) { // PLAYER ON LEFT
        sprite_index = spr_shadeRun;
        image_xscale = -1;
        x-=2;
    }
}
    }
}    
   
*/
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    
if (global.chaseState == 1) {
    if (x &gt; obj_player.x) {
        sprite_index = spr_shadeRun;
        image_xscale = -1;
            if (attack == 0 &amp;&amp; distance_to_object(obj_player) &gt;= 20 &amp;&amp; place_free(x-2,y) ) {
                x -= 2;
        }
    }else if (x &lt; obj_player.x) {
        sprite_index = spr_shadeRun;
        image_xscale = 1;
            if (attack == 0 &amp;&amp; distance_to_object(obj_player) &gt;= 20 &amp;&amp; place_free(x+2,y)) {
                x += 2
                }
    }    
    
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//Attack



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_LOS">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with(obj_shadeTest2) 

if (touchedPlayer == 1){
    
} */

if (global.touchedPlayer == 1) {
    global.seePlayer = 1;
    global.idleState = 0;
    global.chaseState = 1;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
move_contact_solid(direction, global.dexmod );
vspeed = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
