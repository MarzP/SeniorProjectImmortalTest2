<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hp = 10;
image_speed = 1;


//Does not see player
seePlayer = 0;

//Variable after Seeing Player to move toward Player
moveToPlayer = 0;

//LOS "ammo"
los = 1;
lineOfSight = 1;

//Direction
right = 1;
left = 0; 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>moveToPlayer = 1;

/*
//Check Direction Player is
if (obj_player.x &gt;&gt; obj_shade.x) {
//Player is to the right
    
//Move Toward Player
x+=4;
*/


/////////////////////////////////////////////////

/*
//Check if we are left or right of player
//Move toward Player
if (x &lt;&lt; obj_player.x) {
    if (place_free(x+2,y) &amp;&amp; !place_meeting(x+2,y, obj_shade)) {
        x+=2;
        image_xscale =1;
    }
}else{
    if (place_free(x-2,y) &amp;&amp; !place_meeting(x-2,y, obj_shade)) {
        x-=2;
        image_xscale=-1;
        }
    }
    */
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Check Direction
if (right == 1 &amp;&amp; left == 0) {
    los = instance_create(x,y-20, obj_LOS);
    los.speed = 30;
    los.direction = 0;
}

if (right == 0 &amp;&amp; left == 1) {
    los = instance_create(x, y-20, obj_LOS);
    los.speed = 30;
    los.direction = 180;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Gravity
if (place_free(x, y+1)) {
gravity = .75;
//Set max falll speed
if (vspeed &gt;= 10) {
vspeed = 10;
}
}else{
gravity = 0;
}

//Die Code
if (hp &lt;= 0) {
hp = 0;
instance_destroy();
}


if (instance_exists(obj_player)) {
    if (alarm[0] = -1) {
    alarm [0] = random_range(60, 90);
    }
}

//seePlayer is activated by obj_LOS
if (seePlayer == 1) {
    if (alarm[1] = -1) {
    alarm[1] = random_range(10,15);
    }
}

//alarm[1] ticks down to -1
if (moveToPlayer == 1) {
//Check if we are left or right of player
//Move toward Player
if (x &lt;&lt; obj_player.x) {
    if (place_free(x+2,y) &amp;&amp; !place_meeting(x+2,y, obj_shade)) {
        x+=2;
        image_xscale =1;
    }
}else{
    if (place_free(x-2,y) &amp;&amp; !place_meeting(x-2,y, obj_shade)) {
        x-=2;
        image_xscale=-1;
        }
    }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
move_contact_solid(direction, global.dexmod);
vspeed = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
