<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_shade</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_shade</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Variables
move = 0; // 0:stop, 1: Left, 2: Right.
moveTime = 30; //30 steps = 1 second
attack = 0;
hp =5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();
//Gravity
if (place_free(x, y+1)) {
gravity = .75;
//Set max falll speed
if (vspeed &gt;= 10) {
vspeed = 10;

}
}else{
gravity = 0;
}

//Die Code
if (hp &lt;= 0) {
hp = 0;
instance_destroy();
}

//Random Movement
depth = -y;
if (attack == 0 &amp;&amp; distance_to_object (obj_player) &gt; 10 ){
moveTime -= 1;

if (moveTime == 0) { 
    move = choose (/*0,*/1,2); moveTime = 60;


if (move != 0) {
    image_speed = 1;
}
/*
if (move == 0) {
    if (sprite_index = spr_shadeRun &amp;&amp; image_xscale == -1) {
        sprite_index = spr_shade;
        image_xscale = -1;
    }
    if (sprite_index = spr_shadeRun &amp;&amp; image_xscale == 1) {
        sprite_index = spr_shade;
        image_xscale = 1;
    }
    image_speed = 0.1;
    }
 */   
if (move == 1) {
    sprite_index = spr_shadeRun;
        if (place_free (x-2, y)) {
            image_xscale = 1;
            x-=.5;
        }
if (move == 2) {
    sprite_index = spr_shadeRun;
        if (place_free (x+2, y)) {
            image_xscale = 1;
            x+=.5;
            }
        }
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Chase Movement

if (attack == 0 &amp;&amp; distance_to_object(obj_player) &lt;= 20 &amp;&amp; !place_free(x,y+1))  {
    image_speed = 1;
    action_potential_step(obj_player.x, y, 2, 0);


    if (obj_player.x &gt; x &amp;&amp; obj_player.y = y) {// PLAYER ON RIGHT
        sprite_index = spr_shadeRun;
        image_xscale = 1;
    }
    if (obj_player.x &lt; x &amp;&amp; obj_player.y = y) {// PLAYER ON LEFT
        sprite_index = spr_shadeRun;
        image_xscale = -1;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Attack

if (attack == 0 &amp;&amp; distance_to_object (obj_player) &lt;= 4) {
    attack = 1; image_speed = 1;
}

if (attack == 1) {
    if (sprite_index == spr_shadeRun &amp;&amp; image_xscale == -1) {
        sprite_index = spr_shadeAttackLeft;
}
    if (sprite_index == spr_shadeRun &amp;&amp; image_xscale == 1) {
        sprite_index = spr_shadeAttackRight;
}
//image_index is supposed to equal the image ending the atack
    if (image_index = 3) {
        attack = 0;
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_solid">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
move_contact_solid(direction, 10);
vspeed = 0;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
